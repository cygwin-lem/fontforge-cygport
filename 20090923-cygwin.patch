--- origsrc/fontforge-20090923/configure.in	2009-09-23 17:16:11.000000000 -0500
+++ src/fontforge-20090923/configure.in	2010-03-02 23:42:28.771357900 -0600
@@ -116,9 +116,8 @@ powerpc-*-*linux*)
 *sparc*)
  AC_DEFINE(_Keyboard,2)
  ;;
-*-pc-cygwin*)
+*-cygwin*)
 
- AC_DEFINE(_BrokenBitmapImages)
  AC_DEFINE(_ModKeysAutoRepeat)
  AC_DEFINE(__CygWin,1)
  gww_iscygwin="yes"
@@ -124,7 +124,6 @@ powerpc-*-*linux*)
 dnl Although present on my cygwin system the Xi library does not load
 dnl and crashes gdb if we attempt to use it.
 
- AC_DEFINE(_NO_XINPUT)
 
 dnl on cygwin the file we dlopen is not the expected filename. We must
 dnl search for a libtool .la file (libpng.la for example) to tell us
--- origsrc/fontforge-20090923/fontforge/prefs.c	2009-09-09 17:46:55.000000000 -0500
+++ src/fontforge-20090923/fontforge/prefs.c	2010-03-02 23:35:26.062180300 -0600
@@ -520,10 +520,8 @@ static void ProcessFileChooserPrefs(void
 #if __CygWin
 	b[i++] = uc_copy("/cygdrive/c/Windows/Fonts/");
 #endif
-	b[i++] = uc_copy("/usr/X11R6/lib/X11/fonts/");
-#ifndef __CygWin		/* I'm not releasing ftp support on cygwin */
+	b[i++] = uc_copy("/usr/share/fonts/");
 	b[i++] = uc_copy("ftp://ctan.org/pub/tex-archive/fonts/");
-#endif
 	b[i++] = NULL;
 	GFileChooserSetBookmarks(b);
     } else {
--- origsrc/fontforge-20120731-b/fontforge/uiutil.c	2013-10-09 03:02:53.801780400 -0500
+++ src/fontforge-20120731-b/fontforge/uiutil.c	2013-10-09 04:02:50.914523400 -0500
@@ -38,8 +38,7 @@ extern GBox _ggadget_Default_Box;
 #define MAIN_FOREGROUND (_ggadget_Default_Box.main_foreground)
 
 #if __CygWin
-extern void cygwin_conv_to_full_posix_path(const char *win,char *unx);
-extern void cygwin_conv_to_full_win32_path(const char *unx,char *win);
+#include <sys/cygwin.h>
 #endif
 
 char *helpdir = NULL;
@@ -135,7 +134,7 @@ return;
     ch = *pt; *pt='\0';
 
     temp = galloc(strlen(start)+300+ (ch==0?0:strlen(pt+1)));
-    cygwin_conv_to_full_posix_path(start,temp+1);
+    cygwin_conv_path(CCP_WIN_A_TO_POSIX, start,temp+1, sizeof(temp)-1);
     temp[0]='"'; strcat(temp,"\" ");
     if ( ch!='\0' )
 	strcat(temp,pt+1);
@@ -178,7 +177,7 @@ static void findbrowser(void) {
 	strcpy(browser,getenv("BROWSER"));
 #if __CygWin			/* Get rid of any dos style names */
 	if ( isalpha(browser[0]) && browser[1]==':' && browser[2]=='\\' )
-	    cygwin_conv_to_full_posix_path(getenv("BROWSER"),browser);
+	    cygwin_conv_path(CCP_WIN_A_TO_POSIX, getenv("BROWSER"),browser,sizeof(browser));
 	else if ( strchr(browser,'/')==NULL ) {
 	    if ( strstrmatch(browser,".exe")==NULL )
 		strcat(browser,".exe");
@@ -253,12 +252,10 @@ void help(char *file) {
 
     if ( browser[0]=='\0' )
 	findbrowser();
-#ifndef __CygWin
     if ( browser[0]=='\0' ) {
 	gwwv_post_error(_("No Browser"),_("Could not find a browser. Set the BROWSER environment variable to point to one"));
 return;
     }
-#endif
 
     if ( strstr(file,"http://")==NULL ) {
 	fullspec[0] = 0;
@@ -348,7 +347,7 @@ return;
 	/*  should give it a windows file name */
 	char *pt, *tpt;
 	temp = galloc(1024);
-	cygwin_conv_to_full_win32_path(fullspec,temp);
+	cygwin_conv_path(CCP_POSIX_TO_WIN_A,fullspec,temp,1024);
 	for ( pt = fullspec, tpt = temp; *tpt && pt<fullspec+sizeof(fullspec)-3; *pt++ = *tpt++ )
 	    if ( *tpt=='\\' )
 		*pt++ = '\\';
--- origsrc/fontforge-20090923/gutils/dynamic.c	2009-03-29 11:03:21.000000000 -0500
+++ src/fontforge-20090923/gutils/dynamic.c	2010-03-02 22:26:09.765453700 -0600
@@ -29,7 +29,7 @@
 
 /* Parse GNU .la "library" files. They give us the name to use with dlopen */
 /* Currently only important on _Cygwin */
-#if defined(__CygWin) && !defined(NODYNAMIC)
+#if defined(__CygWin)
 #  include <dynamic.h>
 #  include <stdio.h>
 #  include <string.h>
